LIST - 
task 1 -
 #Create an empty list
        Li1 = list()

CODE-      
#Concatenate with [5,6,7,8,10]

        li1 = list()
        li2 = [5,6,7,8,10]
        Li3 = li1 + li2
        print(li3)
OUTPUT-
        [5,6,7,8,10]

CODE-     
#Concatenate with [5,6,7,8,10]
#add 8,3,4,4,10,9,1,5,6,7,8,1 elements to that list
        li1 = list()
        li2 = [5,6,7,8,10]
        li3 = li1 + li2
        print(li3)
        li4 = [8,3,4,4,10,9,5,6,7,8,1]
        print(li3 + li4)
OUTPUT- 
        [5, 6, 7, 8, 10, 8, 3, 4, 4, 10, 9, 5, 6, 7, 8, 1]

CODE-
#Find frequency of 8 (count) and index of 10
        li4 = 8,3,4,4,10,9,5,6,7,8,1]
        print(li4.count(8))
        print(li4[10])
OUTPUT-
        2
        1

CODE-
#find the mean of the list
        li1 = [1,2,3,4,5,6,8]
        li2 = (sum(li1)/7)
        print (int(li2))
OUTPUT-
        4

CODE - 
#find sum (List) + min + Max 
        li1 = [5, 6, 7, 8, 10, 8, 3, 4, 4, 10, 9, 5, 6, 7, 8, 1]
        print (sum(li1))
        print (min(li1))
        print (max(li1))
OUTPUT -
        101
        1
        10
    
 CODE -         
 #Find median of the list
        a = [5, 6, 7, 8, 10, 8, 3, 4, 4, 10, 9, 5, 6, 7, 8, 1]
        mid=int(len(a)/2)  
        print("median is:")
        print(a[mid]) 
OUTPUT -
        median is:
        4

CODE - 
#remove duplicates from list and give output in the format of tuple
        a = [5, 6, 7, 8, 10, 8, 3, 4, 4, 10, 9, 5, 6, 7, 8, 1]
        print(tuple(set(a)))

OUTPUT -
        (1, 3, 4, 5, 6, 7, 8, 9, 10)

CODE -
#convert to tuple and set
        a = [5, 6, 7, 8, 10, 8, 3, 4, 4, 10, 9, 5, 6, 7, 8, 1]   
        print(set(a))  
        print(tuple(a))
        
OUTPUT - 

        {1, 3, 4, 5, 6, 7, 8, 9, 10}
        (5, 6, 7, 8, 10, 8, 3, 4, 4, 10, 9, 5, 6, 7, 8, 1)

TUPLE - 
CODE - 
#Create two tuples (1,4,5,6,7,8) (5,6,7,8,9)
        tup1 = (1,4,5,6,7,8)
        tup2 = (5,6,7,8,9)
        tup3 = tuple(set(tup1) and set(tup2))
        print(tup3)

OUTPUT -
        (5, 6, 7, 8, 9)

CODE - 
#Find the common elements between two tuples
#Concatenate both tuples and remove duplicates from tuple
        tup1 = (1,4,5,6,7,8)
        tup2 = (5,6,7,8,9)
        tup3 = tup1 + tup2
        print(tup3)
        k = tuple(set(tup1)) 
        print(k)

OUTPUT - 

        (1, 4, 5, 6, 7, 8, 5, 6, 7, 8, 9)
        (1, 4, 5, 6, 7, 8)
        
CODE -
#Find the index value of 9 (after concatenation)
        print (tup3.index(9))
        
OUTPUT - 
        (1, 4, 5, 6, 7, 8, 5, 6, 7, 8, 9)
        10
        
CODE - 
#multiply above elements 3 times
        print (tup3 * 3)

 
OUTPUT - 
        (1, 4, 5, 6, 7, 8, 5, 6, 7, 8, 9, 1, 4, 5, 6, 7, 8, 5, 6, 7, 8, 9, 1, 4, 5, 6, 7, 8, 5, 6, 7, 8, 9)

set - 
CODE -
#Create two empty sets
        set1 = set()
        set2 = set()
        print(type(set1))
        print(type(set2))

OUTPUT -
        <class 'set'>
        <class 'set'>

CODE -
#update set1 with 7,8,9,1,2,3,4,5,0
        set3 = {7,8,9,1,2,3,4,5,0}
        set1.update(set3)
        print(set1)

OUTPUT - 
        {0, 1, 2, 3, 4, 5, 7, 8, 9}

CODE - 
#update set2 with 4,5,6,0
        set4 = {4,5,6,0}
        set2.update(set4)
        print(set2)

OUTPUT - 
        {0, 4, 5, 6}

CODE - 
#check whether set2 is subset of set1 or no ?
        print(set2.issubset(set1))

OUTPUT - 
        False

CODE - 
#check whether both have common elements are no ?
        print(set2.isdisjoint(set1))

OUTPUT - 
        False

CODE - 
#remove 8 from set 1 and set 2 ==> find the inferences
        set1.remove(8) 
        print(set1)
        set2.remove(8) 
        print(set2)

OUTPUT - 
        {0, 1, 2, 3, 4, 5, 7, 9}
        {4,5,6,0}

CODE - 
#discard 0 from set1 and set2 
        set1.discard(0)
        print(set1)
        set2.discard(0)
        print(set2)

OUTPUT - 
        {1, 2, 3, 4, 5, 7, 8, 9}
        {4, 5, 6}

CODE - 
#find collection of both sets ===> set1 and set2
        set1=set1.union(set2)
        print(set1)

OUTPUT - 
        {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}

DICTIONARY -
CODE - 
#create a dictionary
        dict1 = dict()
        print(type(dict1))

OUTPUT - 
        <class 'dict'>

CODE - 
#create a dictionary
#Extract "arbeg" from above dictionary
        print(dict1[3][0][::2])
        print(dict1[3][2][-1:-6:-1])

OUTPUT - 
        bobtn
        arbeg

CODE - 
#print all keys in dictionary and convert it into tuple
        print(tuple(dict1.keys()))

OUTPUT - 
        (1, 2, 3)

CODE - 
#Find the average of all numbers available under key "2"
        print(sum(dict1[2])/3)#average

OUTPUT - 
        20.0

task 7:

CODE - 

        a = [1,2,3,4,[100,101,102,"Computer_science"],200,203]

        print(a[4][3][9:])
        print(a[4][3][0:8])

OUTPUT - 
        science
        Computer

task 8 - 

CODE - 

        a = [1,2,3,4,[101,102,103,[201,202,[999]], 666, 777]]

        print(a[4][4])
        print(a[4][3][0])
        print(a[4][1])
        print(a[4][3][2][0])
        print(a[4][5])

OUTPUT - 
        666
        201
        102     
        999
        777

task 9 - 

CODE - 

        Li1 = [2,3,"python","hello",4,5,0]  

        print(Li1[3][2:4])#ll
        print(Li1[2][2:])#thon

OUTPUT - 
        ll
        thon

task 10 - 

CODE - 

        Li1 = [1,2,3,4,5,[11,22,33,44,55,[111,222,333,444],6666,7777],7777]

        print(Li1[5][0])  
        print(Li1[5][6])    
        print(Li1[5][-2])   
        print(Li1[5][7])    
        print(Li1[6])       
        print(Li1[5][5][1]) 
        print(Li1[-2][-1])  

OUTPUT - 
        11
        6666
        6666
        7777
        7777
        222     
        7777
